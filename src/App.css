/*
  This file holds our application's styling
*/

/* Our Game container should be a relative row flexbox, with 1vw top/bottom margin, 10vw height, and width
  calculated by 8vw (width of card) + 1vw (side margins), * 3 (3 cards) */
.game {
  display: flex;
  flex-direction: row;
  position: relative;
  margin: 1vw 0;
  width: calc((8vw + .5vw * 2) * 3);
  height: 10vw;
}

/* Our Status text should be an absolute column flexbox, with items centered horizontally and vertically,
  taking 100% width and height, with a bg color slightly red and .3 opacity. Set z-index to 1 to display above parent */
.status {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(120,0,35,0.3);
  z-index: 1;
}

/* Our status text should have 1vw padding, 1vw bottom margin, a black background color, a white font color,
  and 2vw border radius */
.status .text {
  padding: 1vw;
  margin-bottom: 1vw;
  background-color: black;
  color: white;
  border-radius: 2vw;
}

/* Each card should have 8vw width, .5vw side margins, 10vw height, .5vw border radius, and light gray bg color */
.card {
  width: 8vw;
  margin: 0 .5vw;
  height: 10vw;
  background-color: lightgray;
  border-radius: .5vw;
}

/* Our winner's bg color should be green */
.card.winner {
  background-color: green;
}

/* Our loser's bg color should be red */
.card.loser {
  background-color: red;
}

/* If card is selected, do a linear animation, with forward animation filling */
.card.selected {
  animation-fill-mode: forwards;
  animation: spinner 1s linear;
}

/* Our animation should scale up by 1.1, and rotate by 90 deg, before resetting */
@keyframes spinner {
  0% {
    transform: scale(1) rotateY(0deg);
  }

  50% {
    transform: scale(1.1) rotateY(90deg);
  }

  100% {
    transform: scale(1) rotateY(0deg);
  }
}

/* Don't display items with hidden class */
.hidden {
  display: none;
}
